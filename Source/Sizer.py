

#==========================================================================================#
# >>>>> ПОДКЛЮЧЕНИЕ БИБЛИОТЕК И МОДУЛЕЙ <<<<< #
#==========================================================================================#

import os

#==========================================================================================#
# >>>>> СОЗДАНИЕ РАЗМЕРА ФАЙЛОВ <<<<< #
#==========================================================================================#

class Sizer:
    
    #==========================================================================================#
    # >>>>> КОНСТРУКТОР <<<<< #
    #==========================================================================================#  
      
    def __init__(self):
        # Единицы размеров файлов.
        self.Units = ['B', 'KB', 'MB', 'GB']

    #==========================================================================================#
    # >>>>> ПРОВЕРКА РАЗМЕРА ФАЙЛА <<<<< #
    #==========================================================================================# 
         
    def CheckSize(self, FileInfo: any)-> bool:
        # Состояние.
        IsChecked = False

        # Размер в KB.
        SizeFile = FileInfo.file_size/1024

        # Если размер больше 20 MB.
        if SizeFile < 20480:
            # Состояние.
            IsChecked = True
        
        return IsChecked
    
    #==========================================================================================#
    # >>>>> КОНВЕРТЕР РАЗМЕРА ФАЙЛА <<<<< #
    #==========================================================================================#
    def Converter(self, Unit: str, Value: float) -> any:

        # Перевод в байты.
        if Unit == "B":
            ResultConvertation = Value 

        # Перевод в килобайты.
        if Unit == "KB":
            ResultConvertation = Value/1024 

        # Перевод в мегабайты.
        if Unit == "MB":
            ResultConvertation = Value/1024/1024 

        # Перевод в гигабайты.
        if Unit == "GB":
            ResultConvertation = Value/1024/1024

        # Перевод в наиболее лучший формат для чтения.
        if Unit == "Any":
            if Value < 1024:
                # Перевод в байты.
                ResultConvertation = str(round(Value, 1)) + self.Units[0]

            # Перевод в килобайты.
            if Value > 1024:
                ResultConvertation = str(round(Value/1024, 1)) + self.Units[1]

            if Value/1024 > 1024:
                    ResultConvertation = str(round(Value/1048576, 1)) + self.Units[2]

            # Перевод в гигабайты.
            if Value/1024/1024 > 1024:
                ResultConvertation = str(round(Value/1048576/1024, 1)) + self.Units[3]

        return ResultConvertation
    

    def GetSizeDirectory(self, Files: list[str], UserID: str)-> int:
        # Размер всех файлов.
        self.SizeFiles = 0
        
        # Название файлов в директории.
        for file in Files:
            # Размер скачанного файла.
            SizeFile = os.path.getsize("Data/Files/" + str(UserID)+ "/" + file)

            # Размер всех скачанных файлов.
            self.SizeFiles += SizeFile

        return self.SizeFiles
        





        
                
    