
#==========================================================================================#
# >>>>> СОЗДАНИЕ РАЗМЕРА ФАЙЛОВ <<<<< #
#==========================================================================================#

class Sizer:

    #==========================================================================================#
    # >>>>> КОНСТРУКТОР <<<<< #
    #==========================================================================================#  
      
    def __init__(self):
        # Единицы размеров файлов.
        self.Units = ['B', 'KB', 'MB', 'GB']

    #==========================================================================================#
    # >>>>> ПРОВЕРКА РАЗМЕРА ФАЙЛА <<<<< #
    #==========================================================================================# 
         
    def CheckSize(self, FileInfo: any)-> bool:
        # Состояние.
        IsChecked = False

        # Размер в KB.
        SizeFile = FileInfo.file_size/1024

        # Если размер больше 20 MB.
        if SizeFile < 20480:
            # Состояние.
            IsChecked = True
        
        return IsChecked
    
    #==========================================================================================#
    # >>>>> КОНВЕРТЕР РАЗМЕРА ФАЙЛА <<<<< #
    #==========================================================================================#
    def Converter(self, Unit: str, Value: float) -> any:
        # Перевод в байты.
        if Unit == "B":
            ResultConvertation = Value 

        # Перевод в килобайты.
        if Unit == "KB":
            ResultConvertation = Value/1024 

        # Перевод в мегабайты.
        if Unit == "MB":
            ResultConvertation = Value/1024/1024 

        # Перевод в гигабайты.
        if Unit == "GB":
            ResultConvertation = Value/1024/1024

        # Перевод в наиболее лучший формат для чтения.
        if Unit == "Any":
            if Value > 1024:
                if Value/1024 > 1024:
                    if Value/1024 > 1024:
                        # Перевод в гигабайты.
                        ResultConvertation = str(Value) + self.Units[3]

                # Перевод в мегабайты.
                else: 
                    ResultConvertation = str(Value) + self.Units[2]

            # Перевод в килобайты.
            else:
                ResultConvertation = str(Value) + self.Units[1]

        return ResultConvertation





        
                
    